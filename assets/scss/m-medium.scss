body.dev:before {
    content: 'M';
    padding: 0.2em 1em;
    font-size: 0.7em;
    font-weight: bold;
    background: rgba(255,255,255,0.8);
    color: black;
    position: fixed;
    bottom: 0;
    right: 0;
}


header #sticky-header {
	padding-left: 4em;
}
header [data-icon] {
    left: 0;
}



/** 
 *  DISABLING STICKY BEHAVIOUR 
 *
 *  We could disabled the sticky behaviour depending on screen size,
 *  but devices rotate, sizes changes mid-flight. Hence... 
 **/
#meetandr3 .make-this-sticky {
    position: static !important; /* !important needed to override @style.  */

    &.actions {
        position: absolute !important; /* !important needed to override @style. */
    }
}
body:after {
    display: none;
}

/** END OF DISABLING STICKY **/


.list-of-mentors  {
    li {
        width: 50%;
    }
}

.intro .reading-modes[class]:not(.t-simpler) {
    #meetandr3 & li {
        display: block;
        max-width: 300px;
        width: 100%;
        margin: 0 auto 2em;
        padding: 0;
    }
}



.actions {
	.button {
		font-size: 0.9em;
	}
	li,
	li:first-child {
		span.button--main {
			padding-right: 1em;
		}
	}
	li,
	li:last-child {
		span.button--main {
			padding-left: 1em;
		}
	}
}

.list-of-links {
    li {
        width: 50%;

        &,
        &:nth-child(n) a {
            border-radius: 0;
        }
        &:first-child {
            a {
                border-radius: 0.3em 0 0 0em;
            }
        }
        &:nth-child(2) {
            a {
                border-radius: 0 0.3em 0 0;
            }
        }
        &:nth-last-child(2) {
            a {
                border-radius: 0 0 0 0.3em;
            }
        }
        &:last-child {
            a {
                border-radius: 0 0 0.3em 0;
            }
        }
    }
}



.list-of-memories  {
    li {
        width: 22%;
    }
}

.submitter .field {

    &,
    & + .field {
        width: 100%;
        padding-left: 0;
        padding-right: 0;
    }
}

#frm_sent .pillow {
    width: 80%;
}

.intro .reading-modes[class].t-simpler label:after,
.intro .reading-modes[class].t-simpler button:after {
    content: 'key ' attr(data-key);
}

.only-m[class] {
    display: block;
}
span.only-m[class] {
    display: inline;
}

